Index: linux-3.0.3/arch/mips/lantiq/devices.c
===================================================================
--- linux-3.0.3.orig/arch/mips/lantiq/devices.c	2011-10-04 20:03:54.000000000 +0200
+++ linux-3.0.3/arch/mips/lantiq/devices.c	2011-10-04 20:07:28.514316826 +0200
@@ -20,6 +20,7 @@
 #include <linux/io.h>
 #include <linux/gpio.h>
 #include <linux/leds.h>
+#include <linux/dma-mapping.h>
 
 #include <asm/bootinfo.h>
 #include <asm/irq.h>
@@ -102,3 +103,20 @@
 	pr_err("kernel is compiled without PCI support\n");
 }
 #endif
+
+static unsigned int *cp1_base = 0;
+unsigned int*
+ltq_get_cp1_base(void)
+{
+	return cp1_base;
+}
+EXPORT_SYMBOL(ltq_get_cp1_base);
+
+void __init
+ltq_register_tapi(void)
+{
+#define CP1_SIZE       (1 << 20)
+	dma_addr_t dma;
+	cp1_base =
+		(void*)CPHYSADDR(dma_alloc_coherent(NULL, CP1_SIZE, &dma, GFP_ATOMIC));
+}
Index: linux-3.0.3/arch/mips/lantiq/devices.h
===================================================================
--- linux-3.0.3.orig/arch/mips/lantiq/devices.h	2011-10-04 20:03:54.000000000 +0200
+++ linux-3.0.3/arch/mips/lantiq/devices.h	2011-10-04 20:07:13.362316180 +0200
@@ -23,5 +23,6 @@
 extern void ltq_register_wdt(void);
 extern void ltq_register_asc(int port);
 extern void ltq_register_pci(struct ltq_pci_data *data);
+extern void ltq_register_tapi(void);
 
 #endif
Index: linux-3.0.3/arch/mips/lantiq/xway/Makefile
===================================================================
--- linux-3.0.3.orig/arch/mips/lantiq/xway/Makefile	2011-10-04 20:07:01.000000000 +0200
+++ linux-3.0.3/arch/mips/lantiq/xway/Makefile	2011-10-04 20:07:13.362316180 +0200
@@ -1,5 +1,7 @@
 obj-y := sysctrl.o reset.o gpio.o gpio_stp.o gpio_ebu.o devices.o dma.o nand.o timer.o
 
+obj-y += dev-dwc_otg.o
+
 obj-$(CONFIG_SOC_XWAY) += clk-xway.o prom-xway.o
 obj-$(CONFIG_SOC_AMAZON_SE) += clk-ase.o prom-ase.o
 obj-$(CONFIG_SOC_VR9) += clk-vr9.o prom-vr9.o
Index: linux-3.0.3/arch/mips/lantiq/xway/devices.c
===================================================================
--- linux-3.0.3.orig/arch/mips/lantiq/xway/devices.c	2011-10-04 20:05:44.000000000 +0200
+++ linux-3.0.3/arch/mips/lantiq/xway/devices.c	2011-10-04 20:07:44.070317494 +0200
@@ -21,6 +21,7 @@
 #include <linux/io.h>
 #include <linux/gpio.h>
 #include <linux/leds.h>
+#include <linux/spi/spi.h>
 
 #include <asm/bootinfo.h>
 #include <asm/irq.h>
@@ -101,3 +102,94 @@
 		platform_device_register(&ltq_etop);
 	}
 }
+
+/* madwifi */
+int lantiq_emulate_madwifi_eep = 0;
+EXPORT_SYMBOL(lantiq_emulate_madwifi_eep);
+
+void __init
+ltq_register_madwifi_eep(void)
+{
+	lantiq_emulate_madwifi_eep = 1;
+}
+
+/* ebu */
+static struct resource ltq_ebu_resource =
+{
+	.name   = "gpio_ebu",
+	.start  = LTQ_EBU_GPIO_START,
+	.end    = LTQ_EBU_GPIO_START + LTQ_EBU_GPIO_SIZE - 1,
+	.flags  = IORESOURCE_MEM,
+};
+
+static struct platform_device ltq_ebu =
+{
+	.name           = "ltq_ebu",
+	.resource       = &ltq_ebu_resource,
+	.num_resources  = 1,
+};
+
+void __init
+ltq_register_gpio_ebu(unsigned int value)
+{
+	ltq_ebu.dev.platform_data = (void*) value;
+	platform_device_register(&ltq_ebu);
+}
+
+/* gpio buttons */
+static struct gpio_buttons_platform_data ltq_gpio_buttons_platform_data;
+
+static struct platform_device ltq_gpio_buttons_platform_device =
+{
+	.name = "gpio-buttons",
+	.id = 0,
+	.dev = {
+		.platform_data = (void *) &ltq_gpio_buttons_platform_data,
+	},
+};
+
+void __init
+ltq_register_gpio_buttons(struct gpio_button *buttons, int cnt)
+{
+	ltq_gpio_buttons_platform_data.buttons = buttons;
+	ltq_gpio_buttons_platform_data.nbuttons = cnt;
+	platform_device_register(&ltq_gpio_buttons_platform_device);
+}
+
+static struct resource ltq_spi_resources[] = {
+	{
+		.start  = LTQ_SSC_BASE_ADDR,
+		.end    = LTQ_SSC_BASE_ADDR + LTQ_SSC_SIZE - 1,
+		.flags  = IORESOURCE_MEM,
+	},
+	IRQ_RES(spi_tx, LTQ_SSC_TIR),
+	IRQ_RES(spi_rx, LTQ_SSC_RIR),
+	IRQ_RES(spi_err, LTQ_SSC_EIR),
+};
+
+static struct resource ltq_spi_resources_ar9[] = {
+	{
+		.start  = LTQ_SSC_BASE_ADDR,
+		.end    = LTQ_SSC_BASE_ADDR + LTQ_SSC_SIZE - 1,
+		.flags  = IORESOURCE_MEM,
+	},
+	IRQ_RES(spi_tx, LTQ_SSC_TIR_AR9),
+	IRQ_RES(spi_rx, LTQ_SSC_RIR_AR9),
+	IRQ_RES(spi_err, LTQ_SSC_EIR),
+};
+
+static struct platform_device ltq_spi = {
+	.name		= "ltq-spi",
+	.resource	= ltq_spi_resources,
+	.num_resources	= ARRAY_SIZE(ltq_spi_resources),
+};
+
+void __init ltq_register_spi(struct ltq_spi_platform_data *pdata,
+		struct spi_board_info const *info, unsigned n)
+{
+	if(ltq_is_ar9())
+		ltq_spi.resource = ltq_spi_resources_ar9;
+	spi_register_board_info(info, n);
+	ltq_spi.dev.platform_data = pdata;
+	platform_device_register(&ltq_spi);
+}
Index: linux-3.0.3/arch/mips/lantiq/xway/devices.h
===================================================================
--- linux-3.0.3.orig/arch/mips/lantiq/xway/devices.h	2011-08-17 19:57:16.000000000 +0200
+++ linux-3.0.3/arch/mips/lantiq/xway/devices.h	2011-10-04 20:07:13.366316178 +0200
@@ -11,10 +11,17 @@
 
 #include "../devices.h"
 #include <linux/phy.h>
+#include <linux/spi/spi.h>
+#include <linux/gpio_buttons.h>
 
 extern void ltq_register_gpio(void);
 extern void ltq_register_gpio_stp(void);
 extern void ltq_register_ase_asc(void);
 extern void ltq_register_etop(struct ltq_eth_data *eth);
+extern void ltq_register_gpio_ebu(unsigned int value);
+extern void ltq_register_spi(struct ltq_spi_platform_data *pdata,
+	struct spi_board_info const *info, unsigned n);
+extern void ltq_register_madwifi_eep(void);
+extern void ltq_register_gpio_buttons(struct gpio_button *buttons, int cnt);
 
 #endif
Index: linux-3.0.3/arch/mips/lantiq/Makefile
===================================================================
--- linux-3.0.3.orig/arch/mips/lantiq/Makefile	2011-10-04 20:03:54.000000000 +0200
+++ linux-3.0.3/arch/mips/lantiq/Makefile	2011-10-04 20:08:10.406318621 +0200
@@ -4,7 +4,7 @@
 # under the terms of the GNU General Public License version 2 as published
 # by the Free Software Foundation.
 
-obj-y := irq.o setup.o clk.o prom.o devices.o
+obj-y := irq.o setup.o clk.o prom.o devices.o dev-leds-gpio.o dev-gpio-buttons.o
 
 obj-$(CONFIG_EARLY_PRINTK) += early_printk.o
 
