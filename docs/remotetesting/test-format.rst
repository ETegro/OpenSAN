.. _remotetesting-test-format:
.. vim: syntax=rst
.. vim: textwidth=72
.. vim: spell spelllang=ru,en

============
Формат теста
============
* Любой тест является поддиректорией в **remotetesting/tests**
* Тест **ОБЯЗАТЕЛЬНО** должен иметь входную-точку запуска: файл
  **init.sh** который запускается *perform.sh*-ем
* Текущей рабочей директорией во время исполнения init.sh является сама
  поддиректория с тестом
* Все тесты написаны на **bash**-е и **ОБЯЗАТЕЛЬНО** должны иметь
  включенную "-e" опцию. **ЖЕЛАТЕЛЬНО** иметь включенную "-x" опцию
  также
* В init.sh-е каждый тест **ОБЯЗАН** в начале иметь::

    . $WORK_DIR/config
    . $WORK_DIR/lib/functions-test.sh

Ошибки исполнения команд
========================
Если какая-либо из команд выполняются не успешно, то из-за "-e" опции
выполнение всего процесса тестирования останавливается. Используя
команду **failed()** **ЖЕЛАТЕЛЬНО** указать причину/место ошибки. В
соответствующей (времени запуска perform.sh-а) поддиректории *results/*
появляется файл **failed** в котором прописано название теста на котором
прекратилось тестирование. Также, если имеется комментарий, то он
сохранится в файле **comment**.

Обработчик выхода
=================
Если тест создаёт временные файлы или совершает иные действия
оставляющие систему не в том состоянии при котором она была запущена (то
есть например подключённые iSCSI цели), то необходимо это учесть и
принудительно, даже во время его падения, производить очистку временных
файлов, остановку подключённых iSCSI целей и совершения подобных
действий.

Для этого необходимо в тесте объявить функцию **exit_handler** в которой
вызывать все соответствующие действия. Эта функция также вызывается и
при успешном завершении теста -- поэтому всю очистку можно поместить в
эту функцию, не дублируя её нигде.
