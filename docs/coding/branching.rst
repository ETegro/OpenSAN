.. _coding-branching:

===========================================
Ведение веток и тэгов в процессе разработки
===========================================

.. warning:: В данном разделе никоим образом не затрагиваются ветки для
   временной разработки, то есть помечаемые префиксом “dev-”! Их
   использование вольно.

Процесс развития проекта во времени строится например следующим образом
(в треугольных скобках обозначены ветки, а в квадратных тэги):

::

                                       +<vX.Y.y>-->[vX.Y.y]-+
                                      /                      \
  <vX.X>-->[vX.X]-+><vX.Y>-->[v.X.Y]-+------------------------+-<v.X.Z>------>[v.X.Z]
                   \                                                     /
                    +<vX.X.x>-->[vX.X.x]-+><v.X.X.y>-->[v.X.X.y]--------+
                                          \                            /
                                           +<v.X.X.y.z>-->[v.X.X.y.z]-+

* Ветка дерева разработки всегда имеет конечную цель в виде релиза,
  представляющего из себя тэг (tag)
* Название ветки отражает “цель” её существования. То есть, если ветка
  предназначена для выпуска релиза X.Y, то и называться она будет
  соответствующее
* После того, как считается что ветка достаточно стабильна для выпуска
  релиза, создаётся тэг и ветка удаляется за ненадобностью
* По мере необходимости, создаются очередные ветки разработки,
  ответвляющиеся от тэгов
* Гипотетический процесс прохождения по roadmap-у выглядит как ветка X,
  оканчивающаяся тэгом X, от которого идёт ветка Y, оканчивающий её тэг
  Y, после которого ветка Z, и далее тэг Z. После помечания ветки тэгом,
  она удаляется
* Если необходимо внести изменения в ветку, которая уже закончилась
  тэгом, то есть внести изменения в уже выпущенный релиз (скорее всего,
  это будут исправления ошибок), то создаётся ответвление от тэга релиза
  с следующим уровнем иерархии версии (для релиза 1.2 исправления ошибок
  будут идти в версиях 1.2.1, 1.2.2, итд)
* Если необходимо, то можно производить слияния веток нижестоящих (с
  более мелкими дробления на версии) в вышестоящие.

По имеющимся веткам можно судить о том, какие версии разрабатываются и
поддерживаются. Система частого употребления тэгов обеспечивает принцип
частого выпуска версий (release often). Нет необходимости линейной
разработки с тестовой, экспериментальной и стабильной ветками.

Названия тэгов и веток разработки
=================================
Тэги и ветки разработки обозначаются как “vVERSION”, где VERSION
является, как минимум, двухуровневой цифровой версией “X.Y”, где **X**
это версия очень крупного рода (сильно в корне модифицированный
продукт), **Y** более мелкая, но содержащая ощутимые изменения. Возможно
использование и более глубоких уровней версий. А также возможно и
использование суффиксов вида “alpha”, “beta” и прочие.
