.. _coding-branching:
.. vim: syntax=rst
.. vim: textwidth=72
.. vim: spell spelllang=ru,en

===========================================
Ведение веток и тэгов в процессе разработки
===========================================

.. warning:: В данном разделе никоим образом не затрагиваются ветки для
   временной разработки, то есть помечаемые префиксом “dev-”! Их
   использование вольно.

Процесс развития проекта во времени строится следующим образом (в
треугольных скобочках — названия веток, в квадратных скобках — тэги):

::

                                               +--<v1.2.1>-----[v1.2.1]--+
                                              /                           \
  <v1.1>-----[v1.1]---+---<v1.2>-----[v1.2]--+-----------------------------+---------------+-<v1.Z>-----[v1.Z]
                       \                                                                  /
                        +---<v1.1.1>-----[v1.1.1]---+---<v1.1.2>-----[v1.1.2]------------+
                                                     \                                  /
                                                      +---<v1.1.1.1>-----[v1.1.1.1]----+
  --------------------------------------------------------------------------------------------------------------> (t)

Пример ветвления версий в проекте
(в кавычках — названия веток, в квадратных скобках — тэги):

::

                 o---o "vX.X.x" [vX.X.x]
                /
           o---o "vX.X" [vX.X]
          /
  ---o---o---o---o---o---o---o---o---o---o---o---o---o---o---o "vX.Z"
              \                                         /
               \           o---o "vX.Y.x" [vX.Y.x]     /
                \         /     \                     /
                 o---o---o---o---o---o---o---o---o---o "vX.Y" [vX.Y]
                      \             /
                       o---o---o---o "vX.Y.y" [vX.Y.y]

* Ветка дерева разработки всегда имеет конечную цель в виде релиза,
  представляющего из себя тэг (tag):

::

           o---o---o "v1.0" [v1.0]
          /
  ---o---o---o---o---o "vX.X / develop"

* Название ветки отражает “цель” её существования. То есть, если ветка
  предназначена для выпуска релиза X.Y, то и называться она будет
  так же.
* После того, как считается что ветка достаточно стабильна для выпуска
  релиза, создаётся тэг и ветка удаляется за ненадобностью:

::

           o---o "v1.0" [v1.0]
          /     \
  ---o---o---o---o---o---o---o---o---o "vX.X / develop"
                      \     /
                       o---o "v2.0" [v2.0]

  ---o---o---o---[v1.0]---[v2.0]---o---o "vX.X / develop"

* По мере необходимости, создаются новые ветки разработки,
  ответвляющиеся от тэгов.
* Гипотетический процесс прохождения по roadmap-у выглядит как ветка X,
  оканчивающаяся тэгом X, от которого идёт ветка Y, оканчивающий её тэг
  Y, после которого ветка Z, и далее тэг Z. После отметки ветки тэгом,
  она удаляется.
* Если необходимо внести изменения в ветку, которая уже закончилась
  тэгом, то есть внести изменения в уже выпущенный релиз (скорее всего,
  это будут исправления ошибок), то создаётся ответвление от тэга релиза
  с следующим уровнем иерархии версии (для релиза 1.2 исправления ошибок
  будут идти в версиях 1.2.1, 1.2.2, итд):

::

  ---o---[v1.2]---o---o---o---o---o---o "vX.X / develop"
               \
                o---o---o---o "v1.2.1" [v1.2.1]
                 \
                  o---o---o "v1.2.2" [v1.2.2]

* По необходимости, ветки с более мелким делениями на версии сливаются в
  вышестоящие, но не наоборот:

::
                           o---o---o "v1.2.2" [v1.2.2]
                          /         \
  ---o---o---o---o---o---o---o---o---o---o---o---o---o---o "v1.2" [v1.2]
          \         /                     \
           o---o---o "v1.2.1" [v1.2.1]     \
                    \                       \
  ---o---o---o---o---o---o---o---o---o---o---o---o---o---o "v1.3" [v1.3]
                          \         /
                           o---o---o "v1.3.1" [v1.3.1]

По имеющимся веткам можно определять, какие из них находятся в
разработке, a какие в поддержке. Система частого употребления тэгов
обеспечивает принцип частого выпуска версий (release often). Нет
необходимости линейной разработки с тестовой, экспериментальной и
стабильной ветками.

Названия тэгов и веток разработки
=================================
Тэги и ветки разработки обозначаются как “vVERSION”, где VERSION
является, как минимум, двухуровневой цифровой версией “X.Y”, где **X**
это версия очень крупного рода (сильно в корне модифицированный
продукт), **Y** более мелкая, но содержащая ощутимые изменения. Возможно
использование и более глубоких уровней версий. А также возможно и
использование суффиксов вида “alpha”, “beta” и прочие.
