--- a/qc-driver.c
+++ b/qc-driver.c
@@ -821,7 +821,9 @@ static int qc_i2c_init(struct quickcam *
 	if (!cr) goto fail2;
 	urb->transfer_buffer = kmalloc(qc_i2c_maxbufsize*sizeof(u8), GFP_KERNEL);	/* Allocate maximum ever needed */
 	if (!urb->transfer_buffer) goto fail3;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,24)
 	spin_lock_init(&urb->lock);
+#endif
 	urb->complete = qc_i2c_handler;
 	urb->context  = qc;
 #if (LINUX_VERSION_CODE<KERNEL_VERSION(2,6,9) && !defined(CONFIG_SUSE_KERNEL)) || LINUX_VERSION_CODE<KERNEL_VERSION(2,6,8)
@@ -3006,7 +3008,9 @@ static struct file_operations qc_v4l_fop
 static struct video_device qc_v4l_template = {
 	name:		"QuickCam USB",
 	type:		VID_TYPE_CAPTURE | VID_TYPE_SUBCAPTURE,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,23)
 	hardware:	VID_HARDWARE_QCAM_USB,
+#endif
 	minor:		-1,
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,0)
 	release:	qc_v4l_release,
--- a/qc-memory.c
+++ b/qc-memory.c
@@ -78,15 +78,19 @@ static inline int qc_remap_page_range(un
 #endif
 
 #if LINUX_VERSION_CODE>=KERNEL_VERSION(2,5,3) || defined(pte_offset_map)
+#ifndef pte_offset
 #define pte_offset(pmd,adr)	pte_offset_map(pmd,adr)	/* Emulation for a kernel using the new rmap-vm */
+#endif
 #endif							/* Fix by Michele Balistreri <brain87@gmx.net> */
 
+#ifndef SETPAGEFLAG
 #ifndef SetPageReserved
 #define SetPageReserved(p)	mem_map_reserve(p)
 #endif
 #ifndef ClearPageReserved
 #define ClearPageReserved(p)	mem_map_unreserve(p)
 #endif
+#endif /* SETPAGEFLAG */
 /* }}} */
 
 /* {{{ [fold] kvirt_to_pa(): obtain physical address from virtual address obtained by vmalloc() */
